void shakersort(list**b, list**e) {
	auto start_t = std::chrono::steady_clock::now();
	int perest = 0, sravn = 0;
	list *pv = (*b);
	list *left = (*b);
	list *right = (*e);
	bool flag = 1;
	while (left != right && flag > 0) {
		flag = 0;
		list*cur = pv;
		pv = pv->next;
		while (cur->next != NULL) {
			if (cur == right) break;
			if (cur->item > (cur->next)->item) {
				if (cur == left) left = left->next;
				list*a = cur->next;
				if (a->next != NULL) (a->next)->prev = cur;
				cur->next = a->next;
				if (cur->prev != NULL) (cur->prev)->next = a;
				a->prev = cur->prev;
				a->next = cur;
				cur->prev = a;
				if (cur == (*b)) (*b) = a;
				if (a == (*e)) (*e) = cur;
				flag = 1;
				a = NULL;
				delete a;
				perest++;
			}
			else cur = cur->next;
			sravn++;
		}
		left = left->next;
		left=pv;
		cur = right;
		while (cur->prev != NULL) {
			if (left == right) break;
			if (cur->item < (cur->prev)->item) {
				list*a = cur->prev;
				if (a->prev != NULL) (a->prev)->next = cur;
				cur->prev = a->prev;
				if (cur->next != NULL) (cur->next)->prev = a;
				a->next = cur->next;
				cur->next = a;
				a->prev = cur;
				if (cur == (*e)) (*e) = a;
				a = NULL;
				delete a;
				flag = 1;
				perest++;
			}
			else cur = cur->prev;
			sravn++;
		}
		right = right->prev;
		cur = NULL;
		delete cur;
	}
	auto end_t = std::chrono::steady_clock::now();
	auto ms = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t);
	cout << "Затраченное время(милисекунды): " << ms.count() << endl;
	cout << "Кол-во перестановок: " << perest << endl;
	cout << "Кол-во сравнений: " << sravn << endl;
	pv = NULL;
	delete pv;
	left = NULL;
	delete left;
	right = NULL;
	delete right;
}
