#include <iostream>
#include <ctime>
#include <fstream>
#include <string>
#include "Windows.h"
#include <time.h>
#include <iomanip>
#include "conio.h"

#include "color.h"

#define str string

using namespace std;

const double pi = 3.14;

bool check_number(str s) { //функция для проверки введенного символа
	if (atoi(s.c_str()) || s == "0")
		return true;
	else return false;
}

class SafeArray {
	int* arr;
	int n;
public:
	SafeArray() { this->n = 0; arr = new int[n]; }
	SafeArray(const int& count) { this->n = count; arr = new int[n]; }
	void setElem(const int& count, int elem) {
		try {
			if (count < 0 || count >= this->n)
				throw "Ошибка!!!";
		} catch (const char* ex) {
			return red(ex);
		}
		this->arr[count] = elem;
	}
	int getElem(const int& count) {
		try {
			if (count < 0 || count >= this->n)
				throw "Ошибка!!!";
			else
				return this->arr[count];
		} catch (const char* ex) {
			red(ex);
		}
	}
	void output() {
		for (int i = 0; i < n; i++) {
			try {
				if (arr[i] == -842150451)
					throw " ";
				else 
					cout << arr[i] << endl;
			} catch (const char* ex) {
				cout << " ";
			}
		}
	}
};

void main_menu() {
	magenta("                     ,---.           ,---.   \n");
	magenta("                    / /^`.\\.--''''-./,'^\\ \\ \n");
	magenta("                    \\ \\    _       _    / /  "); red("\t\t\t\t\t\tГлавное Меню:\n");
	magenta("                     `./  / __   __ \\  \\,'   \n");
	magenta("                      /    /_O)_(_O\\    \\     "); green("\t\t\t\t\t1. Заполнить массив\n");
	magenta("                      |  .-'  ___  `-.  |  \n");
	magenta("                   .--|       \\_/       |--.  "); green("\t\t\t\t\t2. Вывести массив\n");
	magenta("                 ,'    \\   \\   |   /   /    `.\n");
	magenta("                /       `.  `--^--'  ,'       \\"); green("\t\t\t\t\t3. Получить определенный элемент\n");
	magenta("             .-^^^^^-.    `--.___.--'     .-^^^^^-.\n");
	magenta(".-----------/         \\------------------/         \\--------------."); green("\t\t0. Изменить размер массива\n");
	magenta("| .---------\\         /----------------- \\         /------------. |\n");
	magenta("| |          `-`--`--'                    `--'--'-'             | |"); green("\t\t4. Выход\n");
	magenta("| |   "); cyan("__      __   ___  | |   ___    ___    _ __ ___     ___"); magenta("    | |\n");
	magenta("| |   "); cyan("\\ \\ /\\ / /  / _ \\ | |  / __|  / _ \\  | '_ ` _ \\   / _ \\"); magenta("   | |\n");
	magenta("| |    "); cyan("\\ V  V /  |  __/ | | | (__  | (_) | | | | | | | |  __/"); magenta("   | |\n");
	magenta("| |     "); cyan("\\_/\\_/    \\___| |_|  \\___|  \\___/  |_| |_| |_|  \\___|"); magenta("   | |\n");
	magenta("| |_____________________________________________________________| |\n");
	magenta("|_________________________________________________________________|\n");
	magenta("                   )__________|__|__________(\n");
	magenta("                  |            ||            |\n");
	magenta("                  |____________||____________|\n");
	magenta("                    ),-----.(      ),-----.(\n");
	magenta("                  ,'   ==.   \\    /  .==    `.\n");
	magenta("                 /            )  (            \\\n");
	magenta("                 `==========='    `==========='  \n");
}
void main_menu1() {
	magenta("                     ,---.           ,---.   \n");
	magenta("                    / /^`.\\.--''''-./,'^\\ \\ \n");
	magenta("                    \\ \\    _       _    / /  "); red("\t\t\t\t\t\tГлавное Меню:\t\t\n");
	magenta("                     `./  / __   __ \\  \\,'   \n");
	magenta("                      /    /_O)_(_O\\    \\     "); green("\t\t\t\t\t1. Заполнить массив\t\n");
	magenta("                      |  .-'  ___  `-.  |  \n");
	magenta("                   .--|       \\_/       |--.  "); green("\t\t\t\t\t2. Вывести массив\t\n");
	magenta("                 ,'    \\   \\   |   /   /    `.\n");
	magenta("                /       `.  `--^--'  ,'       \\"); green("\t\t\t\t\t3. Получить определенный элемент\t\t\n");
	magenta("             .-^^^^^-.    `--.___.--'     .-^^^^^-.\n");
	magenta(".-----------/         \\------------------/         \\--------------."); green("\t\t0. Изменить размер массива\n");
	magenta("| .---------\\         /----------------- \\         /------------. |\n");
	magenta("| |          `-`--`--'                    `--'--'-'             | |"); green("\t\t4. Выход\n");
	magenta("| |   "); red("__      __   ___  | |   ___    ___    _ __ ___     ___"); magenta("    | |\n");
	magenta("| |   "); red("\\ \\ /\\ / /  / _ \\ | |  / __|  / _ \\  | '_ ` _ \\   / _ \\"); magenta("   | |\n");
	magenta("| |    "); red("\\ V  V /  |  __/ | | | (__  | (_) | | | | | | | |  __/"); magenta("   | |\n");
	magenta("| |     "); red("\\_/\\_/    \\___| |_|  \\___|  \\___/  |_| |_| |_|  \\___|"); magenta("   | |\n");
	magenta("| |_____________________________________________________________| |\n");
	magenta("|_________________________________________________________________|\n");
	magenta("                   )__________|__|__________(\n");
	magenta("                  |            ||            |\n");
	magenta("                  |____________||____________|\n");
	magenta("                    ),-----.(      ),-----.(\n");
	magenta("                  ,'   ==.   \\    /  .==    `.\n");
	magenta("                 /            )  (            \\\n");
	magenta("                 `==========='    `==========='  \n");
}

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	int temp1, temp2;
	str s; bool f = true;
	green("Введите новый размер массива: ");
	cin >> temp1;
	SafeArray a(temp1);
	while (f) {
		while (!_kbhit()) {
			main_menu();
			system("cls");
			main_menu1();
			system("cls");
		}
		main_menu();
		cin >> s; system("cls");
		switch (atoi(s.c_str())) {
		case 0:
			green("Введите новый размер массива: ");
			cin >> temp1; a = SafeArray(temp1); break;
		case 1:
			green("Введите индекс и элемент куда добавить: ");
			cin >> temp1 >> temp2;
			a.setElem(temp1 - 1, temp2); break;
		case 2: a.output(); cin.ignore(); getline(cin, s); break;
		case 3: 
			green("Введите индекс откуда взять: ");
			cin >> temp1; a.getElem(temp1);
			cin.ignore(); getline(cin, s); break;
		case 4: f = false; break;
		}
	}

	return 0;
}