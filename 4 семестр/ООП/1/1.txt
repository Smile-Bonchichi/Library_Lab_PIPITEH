#include <iostream>
#include <ctime>
#include <fstream>
#include <string>
#include "Windows.h"
#include <time.h>
#include <iomanip>

#define ll long long
#define str string

using namespace std;

bool check_number(str s) { //функция для проверки введенного символа
	if (atoi(s.c_str()) || s == "0")
		return true;
	else return false;
}

struct info {
	str departure; //отправление
	str destination;//место назначения
	int number_flight = 0;//номер рейса
	str date_departure;//дата отправления
	str date_destination;//дата посадки
	int number_registration = 0;//номер регистрации
};

class Aeroflot {
	int count;
	info* Arr;
private:
	int SearchElem(str item) {
		int c = 0, s = -1, choice;
		for (int i = 0; i < count; i++) {
			if (Arr[i].destination == item) {
				c++;
				s = i;
			}
		}
		if (c == 0)
			return s;
		else if (c == 1)
			return s;
		else {
			while (true) {
				for (int i = 0; i < c; i++)
					cout << item << "\t" << i + 1 << endl;
				cout << "\nChoice one elem: ";
				cin >> choice; system("cls");
				if (choice > c || choice < 0)
					cout << "Error!!!\n" << endl;
				else {
					s = choice - 1;
					return s;
				}
			}
		}
	}
public:
	void setInfo(int n, info* arr) {
		count = n;
		Arr = new info[count]; //Выделение дин. памяти
		for (int i = 0; i < count; i++)
			Arr[i] = arr[i];//Copy всей информации из main в класс
	}
	void setInfo(int n) {
		count = n;
		Arr = new info[count];
	}
	void add() {//метод добавления
		info* temp = new info[count];//создание третьего стакана
		for (int i = 0; i < count; i++)
			temp[i] = Arr[i]; //copy для добавления

		count++; str s;
		Arr = new info[count]; //увеличение выделяемой памяти для записи нового элемента

		cout << "Введите место отправления:";
		cin.ignore(); getline(cin, s);
		Arr[count - 1].departure = s;

		cout << "Введите место назначения:";
		getline(cin, s);
		Arr[count - 1].destination = s;

		Arr[count - 1].number_flight = count;

		cout << "Введите дату вылета:";
		getline(cin, s);
		Arr[count - 1].date_departure = s;

		cout << "Введите дату прилета:";
		getline(cin, s);
		Arr[count - 1].date_destination = s;

		cout << "Введите номер регистрационной секции:";
		cin >> s; Arr[count - 1].number_registration = atoi(s.c_str());

		for (int i = 0; i < count - 1; i++)
			Arr[i] = temp[i];
		/*ofstream sout;
		sout.open("1\\air.txt");
		sout << count << endl;
		for (int i = 0; i < count; i++) {
			sout << Arr[i].number_flight << endl;
			sout << Arr[i].departure << endl << Arr[i].destination << endl;
			sout << Arr[i].number_registration << endl;
			sout << Arr[i].date_departure << endl << Arr[i].date_destination << endl;
		}
		sout.close();*/
		delete[]temp;
	}
	void output() { //метод вывода
		cout << "____________________________________________________________________________________" << endl;
		cout << "| № fligth | Departure | Destination |  Date departure  | Date destination | № reg |" << endl;
		cout << "|----------+-----------+-------------+------------------+------------------+-------+" << endl;
		for (int i = 0; i < count; i++) {
			cout << "| " << setw(8) << Arr[i].number_flight << " | " << setw(9) << Arr[i].departure;
			cout << " | " << setw(11) << Arr[i].destination << " | ";
			cout << setw(16) << Arr[i].date_departure << " | " << setw(16) << Arr[i].date_destination << " | ";
			cout << setw(5) << Arr[i].number_registration << " |" << endl;
			cout << "|----------+-----------+-------------+------------------+------------------+-------+" << endl;
		}
	}
	void sort() { //метод сортировки
		for (int j = 1; j < count; j++)
			for (int i = 0; i < count - j; i++)
				if (Arr[i].destination > Arr[i + 1].destination)
					swap(Arr[i], Arr[i + 1]);
	}
	void initial_Sort() { //метод для возвращения обратного вида
		for (int j = 1; j < count; j++)
			for (int i = 0; i < count - j; i++)
				if (Arr[i].number_flight > Arr[i + 1].number_flight)
					swap(Arr[i], Arr[i + 1]);
	}	
	void search() { //метод для поиска рейса по месту назначения
		str s; int x;
		cout << "Введите место назначение искоемого рейса: ";
		cin >> s; system("cls");
		x = SearchElem(s);
		if (x != -1) {
			cout << "____________________________________________________________________________________" << endl;
			cout << "| № fligth | Departure | Destination |  Date departure  | Date destination | № reg |" << endl;
			cout << "|----------+-----------+-------------+------------------+------------------+-------+" << endl;
			cout << "| " << setw(8) << Arr[x].number_flight << " | " << setw(9) << Arr[x].departure;
			cout << " | " << setw(11) << Arr[x].destination << " | ";
			cout << setw(16) << Arr[x].date_departure << " | " << setw(16) << Arr[x].date_destination << " | ";
			cout << setw(5) << Arr[x].number_registration << " |" << endl;
			cout << "|----------+-----------+-------------+------------------+------------------+-------+" << endl;
		} else
			cout << "Такого рейса нет!!!" << endl << endl;
	}
	~Aeroflot() { //деструктор класса
		count = NULL;
		delete[]Arr;//освобождение памяти
	}
};

void main_menu() {
	cout << "                     ,---.           ,---.   " << endl;
	cout << "                    / /^`.\\.--''''-./,'^\\ \\	" << endl;
	cout << "                    \\ \\    _       _    / /	" << "\t\t\t\t\t\tГлавное Меню:\t\t" << endl;
	cout << "                     `./  / __   __ \\  \\,'	" << endl;
	cout << "                      /    /_O)_(_O\\    \\	" << "\t\t\t\t\t1. Добавить новую запись\t" << endl;
	cout << "                      |  .-'  ___  `-.  |	" << endl;
	cout << "                   .--|       \\_/       |--.	" << "\t\t\t\t\t2. Вывести записи полетов\t" << endl;
	cout << "                 ,'    \\   \\   |   /   /    `." << endl;
	cout << "                /       `.  `--^--'  ,'       \\" << "\t\t\t\t\t\t3. Отсортировать записи полетов\t\t" << endl;
	cout << "             .-^^^^^-.    `--.___.--'     .-^^^^^-." << endl;
	cout << ".-----------/         \\------------------/         \\--------------." << "\t\t\t4. Вернуть в первоначальный вид\t\t\t" << endl;
	cout << "| .---------\\         /----------------- \\         /------------. |" << endl;
	cout << "| |          `-`--`--'                    `--'--'-'             | |" << "\t\t\t5. Поиск записи полета\t\t\t" << endl;
	cout << "| |__      __   ___  | |   ___    ___    _ __ ___     ___       | |" << endl;
	cout << "| |\\ \\ /\\ / /  / _ \\ | |  / __|  / _ \\  | '_ ` _ \\   / _ \\      | |" << "\t\t\t6. Выход" << endl;
	cout << "| | \\ V  V /  |  __/ | | | (__  | (_) | | | | | | | |  __/      | |" << endl;
	cout << "| |  \\_/\\_/    \\___| |_|  \\___|  \\___/  |_| |_| |_|  \\___|      | |" << endl;
	cout << "| |_____________________________________________________________| |" << endl;
	cout << "|_________________________________________________________________|" << endl;
	cout << "                   )__________|__|__________(" << endl;
	cout << "                  |            ||            |" << endl;
	cout << "                  |____________||____________|" << endl;
	cout << "                    ),-----.(      ),-----.(" << endl;
	cout << "                  ,'   ==.   \\    /  .==    `." << endl;
	cout << "                 /            )  (            \\" << endl;
	cout << "                 `==========='    `==========='  " << endl;
}

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	time_t start, end;
	double dif;
	str s; bool f = true; 
	Aeroflot A;
	start = clock();
	cout << "Читать данные из файла?\n1 - Yes\t2 - No\n\n";
	cin >> s;
	system("cls");
	while (f) {
		if (!check_number(s))
			cout << "Вы ввели не число!!!" << endl;
		else {
			f = false;
			if (atoi(s.c_str()) == 1) {
				fstream sin; int n;
				sin.open("1\\air.txt"); //открытие файла
				sin >> n;
				info* arr = new info[n]; //создание и выделение динамического массива объекта структуры
				for (int i = 0; i < n; i++) { //заполнение массива
					sin >> arr[i].number_flight;
					sin.ignore(); getline(sin, arr[i].departure); getline(sin, arr[i].destination);
					sin >> arr[i].number_registration;
					sin.ignore(); getline(sin, arr[i].date_departure); getline(sin, arr[i].date_destination);
				}
				sin.close(); //закрытие файла

				A.setInfo(n, arr); //передача данных в класс
				delete[]arr; //освобождение памяти
			} else if (atoi(s.c_str()) == 2)
				A.setInfo(0); //передача данных в класс
		}
	}
	f = true;
	while (f) {
		main_menu();
		cin >> s;
		system("cls");
		if (!check_number(s))
			cout << "Вы ввели не число!!!" << endl;
		else {
			switch (atoi(s.c_str())) {
			case 1: A.add(); break;
			case 2: A.output(); break;
			case 3: A.sort(); break;
			case 4: A.initial_Sort(); break;
			case 5: A.search(); break;
			case 6: f = false; break;
			default: cout << "Такой операции не существует!!!" << endl << "Введите заново." << endl; break;
			}
		}
	}
	system("cls");
	end = clock();
	dif = difftime(end, start);
	cout << "Программа работала " << (dif / 1000.0) << " секунд\n";
	return 0;
}